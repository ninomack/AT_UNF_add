
&Вместо("СформироватьПФ")
Функция Aktorg_СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ЭтоУПД)
	Перем Ошибки;
	
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ДанныеПечати		= Новый Структура;
	
	ЕстьКолонкаЭтоКорректировка = (ДанныеОбъектовПечати.Колонки.Найти("ЭтоКорректировка") <> Неопределено);
	
	Для каждого ДанныеОбъекта Из ДанныеОбъектовПечати Цикл
		
		ПолныйПутьКМакетуПечатнойФормы = ПолныйПутьКМакету(ДанныеОбъекта.ДатаДокумента, ЭтоУПД);
		Если ЗначениеЗаполнено(ОписаниеПечатнойФормы.ПолныйПутьКМакету)
			И ОписаниеПечатнойФормы.ПолныйПутьКМакету <> ПолныйПутьКМакетуПечатнойФормы Тогда
			
			ВызватьИсключение НСтр("ru ='Нельзя пакетно формировать счета-фактуры разных постановлений.'");
			
		ИначеЕсли НЕ ЗначениеЗаполнено(ОписаниеПечатнойФормы.ПолныйПутьКМакету) Тогда
			
			ОписаниеПечатнойФормы.ПолныйПутьКМакету = ПолныйПутьКМакетуПечатнойФормы;
			
		КонецЕсли;
		
		Макет = УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
		
		ОбластиМакета = Новый Структура;
		ОбластиМакета.Вставить("ОбластьЗаголовокТаблицы",	ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ЗаголовокТаблицы", , Ошибки));
		ОбластиМакета.Вставить("ОбластьСтроки", 			ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Строка", , Ошибки));
		ОбластиМакета.Вставить("ИтогоПоСтранице",			ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИтогоПоСтранице", , Ошибки));
		ОбластиМакета.Вставить("ОбластьИтого",				ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Итого", , Ошибки));
		ОбластиМакета.Вставить("ОбластьНумерацияЛистов",	ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "НумерацияЛистов", , Ошибки));
		
		ИмяОбласти = ?(ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да, "ПодвалСФаксимиле", "Подвал");
		ОбластиМакета.Вставить("ОбластьПодвал", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, , Ошибки));
		
		ИмяОбласти = ?(ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да, "ПодвалНакладнойСФаксимиле", "ПодвалНакладной");
		ОбластиМакета.Вставить("ОбластьПодвалНакладной", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, , Ошибки));
		
		СтавкаНДС0 = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль();
		ДокументФормируетсяСогласноФЗ56 = ПечатьДокументовУНФ.ДокументФормируетсяСогласноФЗ56(ДанныеОбъекта.ДатаДокумента);
		ДокументФормируетсяСогласноСФ981 = (ДанныеОбъекта.ДатаДокумента >= Константы.НачалоИспользованияСФ981.Получить());
		ИспользуетсяПостановление1137 = (ДанныеОбъекта.ДатаДокумента >= Константы.НачалоИспользованияСФ1137.Получить());
		НеобходимоВНоменклатуруДобавитьКодыТНВЭД = (ДанныеОбъекта.ДатаДокумента >= Дата(2016, 07, 01));
		
		ЕстьЗапасы = ЕстьЗапасы(ДанныеОбъекта.ТаблицаЗапасы);
		ЕстьНаборы = ДанныеОбъекта.ТаблицаЗапасы.Колонки.Найти("НоменклатураНабора") <> Неопределено;
		
		// Заголовок
		ИмяОбласти = ?(ДокументФормируетсяСогласноФЗ56, "ЗаголовокПФ625", "ЗаголовокПФ");
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, , Ошибки);
		Если ОбластьМакета = Неопределено Тогда
			
			ВызватьИсключение НСтр("ru = 'Изменился типовой макет печатной формы счета-фактуры. Для использования 
			|новой формы необходимо обновить отредактированный ранее макет. 
			|Вы можете отредактировать макет самостоятельно в разделе ""Компания - Администрирование - Печатные формы,
			|отчеты, обработки - Макеты печатных форм"" или обратиться к специалисту обслуживающей организации.'");
			
		Иначе
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		// Шапка
		СведенияОПоставщике			= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Организация, ДанныеОбъекта.ДатаДокумента,,);
		СведенияОПокупателе			= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Контрагент, ДанныеОбъекта.ДатаДокумента,,);
		
		СведенияОГрузоотправителе	= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Грузоотправитель, ДанныеОбъекта.ДатаДокумента,,);
		СведенияОГрузополучателе	= УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Грузополучатель, ДанныеОбъекта.ДатаДокумента,,);
		
		ДанныеПечати.Вставить("ВидОперации", ДанныеОбъекта.ВидОперации);
		ДанныеПечати.Вставить("Номер", ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ДанныеОбъекта.ДатаДокумента, ДанныеОбъекта.Номер, ДанныеОбъекта.Префикс));
		
		Если НЕ ПустаяСтрока(ДанныеОбъекта.ЦифровойИндексОбособленногоПодразделения) Тогда
			
			ДанныеПечати.Номер = ДанныеПечати.Номер + "/" + СокрЛП(ДанныеОбъекта.ЦифровойИндексОбособленногоПодразделения);
			
		КонецЕсли;
		
		ДанныеПечати.Вставить("Дата", Формат(ДанныеОбъекта.ДатаДокумента, "ДФ='дд ММММ гггг ""г.""'"));
		ДанныеПечати.Вставить("НомерИсправления", ДанныеОбъекта.НомерИсправления);
		ДанныеПечати.Вставить("ДатаИсправления", ?(ЗначениеЗаполнено(ДанныеОбъекта.ДатаИсправления), Формат(ДанныеОбъекта.ДатаИсправления, "ДФ='дд ММММ гггг ""г.""'"), Неопределено));
		ДанныеПечати.Вставить("СтатусУПД", ДанныеОбъекта.СтатусУПД);
		
		ТекстШаблона = ?(ЭтоУПД, НСтр("ru ='Универсальный передаточный документ № %1 от %2 г.'"), НСтр("ru ='Счет-фактура № %1 от %2 г.'"));
		ДанныеПечати.Вставить("ПредставлениеДокумента", СтрШаблон(ТекстШаблона, ДанныеПечати.Номер, ДанныеПечати.Дата));
		
		ДанныеПечати.Вставить("ПредставлениеПоставщика", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,"));
		ДанныеПечати.Вставить("АдресПоставщика", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес,"));
		
		ДанныеПечати.Вставить("ПредставлениеПокупателя", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,"));
		ДанныеПечати.Вставить("АдресПокупателя", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПокупателе, "ЮридическийАдрес,"));
		
		ПредставлениеГрузоотправителя = "";
		ПредставлениеГрузополучателя = "";
		Если ЕстьЗапасы Тогда
			
			Если ДанныеОбъекта.Грузоотправитель = ДанныеОбъекта.Организация Тогда
				
				ПредставлениеГрузоотправителя = НСтр("ru = 'он же'");
				
			ИначеЕсли ЗначениеЗаполнено(ДанныеОбъекта.Грузоотправитель) Тогда
				
				ПредставлениеГрузоотправителя = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузоотправителе, "ПолноеНаименование,ФактическийАдрес,")
				
			КонецЕсли;
			
			АдресДоставки = ДанныеОбъекта.АдресДоставки;
			ПредставлениеГрузополучателя = ?(ПустаяСтрока(АдресДоставки)
					,УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование, ФактическийАдрес,")
					,УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,") + "; " + АдресДоставки);
			
		КонецЕсли;
		ДанныеПечати.Вставить("ПредставлениеГрузоотправителя", ПредставлениеГрузоотправителя);
		ДанныеПечати.Вставить("ПредставлениеГрузополучателя", ПредставлениеГрузополучателя);
		
		ИННПоставщика = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПоставщике, "ИНН,", Ложь);
		
		Если ДанныеОбъекта.ОбособленноеПодразделениеПоставщика = ДанныеОбъекта.Организация Тогда
			
			КПППоставщика = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
			
		Иначе
			
			КПППоставщика = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеОбъекта.ОбособленноеПодразделениеПоставщика, "КПП");
			
		КонецЕсли;
		
		ИННПоставщика = ИННПоставщика + ?(ПустаяСтрока(КПППоставщика), "", "/" + КПППоставщика);
		ДанныеПечати.Вставить("ИННПоставщика", ИННПоставщика);
		
		ИННПокупателя = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПокупателе, "ИНН,", Ложь);
		
		Если ДанныеОбъекта.ОбособленноеПодразделениеПокупателя = ДанныеОбъекта.Контрагент Тогда
			
			КПППокупателя = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПокупателе, "КПП,", Ложь);
			
		Иначе
			
			КППпокупателя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеОбъекта.ОбособленноеПодразделениеПокупателя, "КПП");
			
		КонецЕсли;
		
		ИННПокупателя = ИННПокупателя + ?(ПустаяСтрока(КПППокупателя), "", "/" + КПППокупателя);
		ДанныеПечати.Вставить("ИННПокупателя", ИННПокупателя);
		
		ПредставлениеПлатежныхДокументов = "";
		Если ТипЗнч(ДанныеОбъекта.ПлатежныеДокументы) = Тип("ТаблицаЗначений") Тогда
			
			ШаблонПредставления = НСтр("ru ='№ %1 от %2'");
			Для каждого ПлатежныйДокумент Из ДанныеОбъекта.ПлатежныеДокументы Цикл
				
				ПредставлениеПлатежныхДокументов = ПредставлениеПлатежныхДокументов
					+ ?(ПустаяСтрока(ПредставлениеПлатежныхДокументов), "", ", ")
					+ СтрШаблон(ШаблонПредставления, ПлатежныйДокумент.НомерПлатежноРасчетногоДокумента, Формат(ПлатежныйДокумент.ДатаПлатежноРасчетногоДокумента, "ДФ=dd.MM.yyyy"));
				
			КонецЦикла;
			
		КонецЕсли;
		ДанныеПечати.Вставить("ПоДокументу", ПредставлениеПлатежныхДокументов);
		ДанныеПечати.Вставить("Валюта", СокрЛП(ДанныеОбъекта.ВалютаНаименование) + ", " + СокрЛП(ДанныеОбъекта.ВалютаКод));
		ДанныеПечати.Вставить("ИдентификаторГосКонтракта", ДанныеОбъекта.ИдентификаторГосКонтракта);
		
		УчестьРазличияСводногоСФ(ДанныеОбъекта, ДанныеПечати, ЭтоУПД);
		ОбработатьПустыеПоляШапки(ДанныеПечати, ЕстьЗапасы, ЭтоУПД);
		
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Шапка", , Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		Если ДокументФормируетсяСогласноФЗ56 Тогда
			
			ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "ИдентификаторГосКонтракта", , Ошибки);
			Если ОбластьМакета <> Неопределено Тогда
				
				ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Табличная часть
		Если ОбластиМакета.ОбластьЗаголовокТаблицы <> Неопределено Тогда
			
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьЗаголовокТаблицы);
			
		КонецЕсли;
		
		СтруктураИтогов = Новый Структура;
		СтруктураИтогов.Вставить("НомерЛиста",				1);
		СтруктураИтогов.Вставить("НПП",						0);
		СтруктураИтогов.Вставить("КоличествоСтрок",			ДанныеОбъекта.ТаблицаЗапасы.Количество());
		СтруктураИтогов.Вставить("ПоСтраницеСтоимость",		0);
		СтруктураИтогов.Вставить("ПоСтраницеСуммаНДС",		0);
		СтруктураИтогов.Вставить("ПоСтраницеВсего",			0);
		СтруктураИтогов.Вставить("Стоимость",				0);
		СтруктураИтогов.Вставить("СуммаНДС",				0);
		СтруктураИтогов.Вставить("Всего",					0);
		СтруктураИтогов.Вставить("ПредставлениеДокумента",	ДанныеПечати.ПредставлениеДокумента);
		СтруктураИтогов.Вставить("ЕстьНаборы",				ЕстьНаборы);
		СтруктураИтогов.Вставить("ЭтоУПД",					ЭтоУПД);
		СтруктураИтогов.Вставить("ЕстьСтавкаНольПроцентов",	Ложь);
		
		Если ОбластиМакета.ОбластьСтроки <> Неопределено Тогда
			
			ПараметрыНоменклатуры = Новый Структура;
			
			Для каждого СтрокаТабличнойЧасти Из ДанныеОбъекта.ТаблицаЗапасы Цикл
				
				ДанныеПечати.Очистить();
				ПараметрыНоменклатуры.Очистить();
				
				Если СтруктураИтогов.ЕстьНаборы И СтрокаТабличнойЧасти.ЭтоНабор=Истина Тогда 
					НомерСтроки = 0;
				Иначе
					СтруктураИтогов.НПП = СтруктураИтогов.НПП + 1;
					НомерСтроки = СтруктураИтогов.НПП;
				КонецЕсли;
				ДанныеПечати.Вставить("НомерСтроки", НомерСтроки);
				
				ПараметрыНоменклатуры.Вставить("Содержание", СтрокаТабличнойЧасти.Содержание);
				ПараметрыНоменклатуры.Вставить("ПредставлениеНоменклатуры", СтрокаТабличнойЧасти.ПредставлениеНоменклатуры);
				ПараметрыНоменклатуры.Вставить("ПредставлениеХарактеристики", СтрокаТабличнойЧасти.Характеристика);
				ПараметрыНоменклатуры.Вставить("НеобходимоВыделитьКакСоставНабора", ?(СтруктураИтогов.ЕстьНаборы, СтрокаТабличнойЧасти.НеобходимоВыделитьКакСоставНабора, Ложь));
				
				Если ДокументФормируетсяСогласноСФ981 Тогда
					
					ДанныеПечати.Вставить("ТоварКодТНВЭД", Неопределено);
					Если СтрокаТабличнойЧасти.СтавкаНДС = СтавкаНДС0 Тогда
						
						ДанныеПечати.ТоварКодТНВЭД = СокрЛП(СтрокаТабличнойЧасти.КодТНВЭД);
						
					КонецЕсли;
					
				ИначеЕсли НеобходимоВНоменклатуруДобавитьКодыТНВЭД Тогда
					
					ПараметрыНоменклатуры.Вставить("КодТНВЭД", СтрокаТабличнойЧасти.КодТНВЭД);
					
				КонецЕсли;
				
				ДанныеПечати.Вставить("ТоварНаименование",		ПечатьДокументовУНФ.ПредставлениеНоменклатуры(ПараметрыНоменклатуры));
				ДанныеПечати.Вставить("ПредставлениеКодаНоменклатуры", ПечатьДокументовУНФ.ПредставлениеКодаНоменклатуры(СтрокаТабличнойЧасти));
				ДанныеПечати.Вставить("ЭтоНабор",				?(СтруктураИтогов.ЕстьНаборы, СтрокаТабличнойЧасти.ЭтоНабор = Истина, Ложь));
				ДанныеПечати.Вставить("ЕдиницаИзмеренияКод",	СтрокаТабличнойЧасти.ЕдиницаИзмеренияПоОКЕИ_Код);
				ДанныеПечати.Вставить("ЕдиницаИзмерения",		СтрокаТабличнойЧасти.ЕдиницаИзмеренияПоОКЕИ_Наименование);
				
				Если ТипЗнч(СтрокаТабличнойЧасти.Количество) = Тип("Число")
					И ТипЗнч(СтрокаТабличнойЧасти.КоэффициентЕдиницыИзмерения) = Тип("Число") Тогда
					
					ДанныеПечати.Вставить("Количество",			Окр(СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.КоэффициентЕдиницыИзмерения, 3));
					
				Иначе
					
					ДанныеПечати.Вставить("Количество",			СтрокаТабличнойЧасти.Количество);
					
				КонецЕсли;
				
				ДанныеПечати.Вставить("Акциз",					?(ИспользуетсяПостановление1137, НСтр("ru ='без акциза'"), ""));
				ДанныеПечати.Вставить("СтавкаНДС",				СтрокаТабличнойЧасти.СтавкаНДС);
				
				СтруктураИтогов.ЕстьСтавкаНольПроцентов = (СтруктураИтогов.ЕстьСтавкаНольПроцентов ИЛИ ДанныеПечати.СтавкаНДС = УправлениеНебольшойФирмойПовтИсп.ПолучитьСтавкуНДСНоль());
				
				Если ДанныеОбъекта.СуммаВключаетНДС Тогда
					
					СуммаБезНДС = СтрокаТабличнойЧасти.Сумма - СтрокаТабличнойЧасти.СуммаНДС;
					
				Иначе
					
					СуммаБезНДС = СтрокаТабличнойЧасти.Сумма;
					
				КонецЕсли;
				
				Если ТипЗнч(ДанныеПечати.Количество) <> Тип("Число") Тогда
					
					Цена = Неопределено; //При реализации услуг количество (и цена) могут не указываться
					
				ИначеЕсли ДанныеОбъекта.СуммаВключаетНДС = Ложь
					И СтрокаТабличнойЧасти.КоэффициентЕдиницыИзмерения = 1
					И СтрокаТабличнойЧасти.Владелец().Колонки.Найти("СуммаСкидкиПоСтроке") <> Неопределено
					И СтрокаТабличнойЧасти.СуммаСкидкиПоСтроке = 0 Тогда
					
					Цена = СтрокаТабличнойЧасти.Цена;
					
				Иначе
					
					Цена = СуммаБезНДС / ?(ДанныеПечати.Количество = 0, 1, ДанныеПечати.Количество);
					
				КонецЕсли;
				
				ДанныеПечати.Вставить("Цена",					Цена);
				ДанныеПечати.Вставить("Стоимость",				СуммаБезНДС);
				ДанныеПечати.Вставить("СуммаНДС",				СтрокаТабличнойЧасти.СуммаНДС);
				ДанныеПечати.Вставить("Всего",					СтрокаТабличнойЧасти.Всего);
				
				ДанныеПечати.Вставить("СтранаСсылка",			СтрокаТабличнойЧасти.СтранаСсылка);
				ДанныеПечати.Вставить("СтранаПроисхожденияКод",	СтрокаТабличнойЧасти.СтранаКод);
				ДанныеПечати.Вставить("ПредставлениеСтраны",	СтрокаТабличнойЧасти.СтранаПредставление);
				ДанныеПечати.Вставить("ПредставлениеГТД",		СтрокаТабличнойЧасти.ПредставлениеГТД);
				
				ЭтоАванс = (ДанныеОбъекта.ВидОперации = Перечисления.ВидыОперацийСчетФактура.Аванс);
				ДанныеПечати.Вставить("ЭтоАванс",				ЭтоАванс);
				
				ОбработатьПустыеЗначенияДанныхПечатиСтроки(ДанныеПечати);
				ОбластиМакета.ОбластьСтроки.Параметры.Заполнить(ДанныеПечати);
				
				Если СтруктураИтогов.НПП > 1
					И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов, Ошибки) = Ложь Тогда
					
					ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, СтруктураИтогов);
					
				КонецЕсли;
				
				УвеличитьИтогиДокумента(СтруктураИтогов, ДанныеПечати);
				
				ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьСтроки);
				
				Если СтруктураИтогов.ЕстьНаборы Тогда
					
					НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластиМакета.ОбластьСтроки, СтрокаТабличнойЧасти);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если СтруктураИтогов.НомерЛиста > 1
			И ОбластиМакета.ИтогоПоСтранице <> Неопределено Тогда
			
			ОбластиМакета.ИтогоПоСтранице.Параметры.Заполнить(СтруктураИтогов);
			ТабличныйДокумент.Вывести(ОбластиМакета.ИтогоПоСтранице);
			
		КонецЕсли;
			
		Если ОбластиМакета.ОбластьИтого <> Неопределено Тогда
			
			ДанныеПечати.Очистить();
			ДанныеПечати.Вставить("ИтогоСтоимость",	СтруктураИтогов.Стоимость);
			ДанныеПечати.Вставить("ИтогоСуммаНДС",	СтруктураИтогов.СуммаНДС);
			ДанныеПечати.Вставить("ИтогоВсего",		СтруктураИтогов.Всего);
			
			Если ИспользуетсяПостановление1137 Тогда
				
				ИменаПолей = "ИтогоСтоимость,ИтогоВсего" + ?(СтруктураИтогов.ЕстьСтавкаНольПроцентов, "", ",ИтогоСуммаНДС");
				ЗаменитьПустыеЗначенияНаПрочерки(ДанныеПечати, ИменаПолей);
				
			КонецЕсли;
			
			ОбластиМакета.ОбластьИтого.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьИтого);
			
		КонецЕсли;
		
		Если ОбластиМакета.ОбластьПодвал <> Неопределено Тогда
			
			ДанныеПечати.Вставить("ФИОПБОЮЛ", ?(ДанныеОбъекта.ЭтоФизическоеЛицо, ДанныеОбъекта.РасшифровкаПодписиРуководителя, Неопределено));
			ДанныеПечати.Вставить("ФИОРуководителя", ?(ДанныеОбъекта.ЭтоФизическоеЛицо, Неопределено, ДанныеОбъекта.РасшифровкаПодписиРуководителя));
			ДанныеПечати.Вставить("ФИОГлавногоБухгалтера", ?(ДанныеОбъекта.ЭтоФизическоеЛицо, Неопределено, ДанныеОбъекта.РасшифровкаПодписиГлавногоБухгалтера));
			ДанныеПечати.Вставить("Свидетельство", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОПоставщике, "Свидетельство,"));
			
			КоличествоСтраницПрописью = УправлениеНебольшойФирмойСервер.ФормаМножественногоЧисла(НСтр("ru = 'листе'"), НСтр("ru = 'листах'"), НСтр("ru = 'листах'"), СтруктураИтогов.НомерЛиста);
			ДанныеПечати.Вставить("КоличествоЛистов", СтрШаблон(НСтр("ru = 'Документ составлен на%1%2 %3'"), Символы.ПС, СтруктураИтогов.НомерЛиста, КоличествоСтраницПрописью));
			
			Если ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да Тогда
				
				ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя каринки в области, Значение - имя реквизита
				ПодписиИФаксимиле.Вставить("ПодписьПБОЮЛ", ?(ДанныеОбъекта.ЭтоФизическоеЛицо, "ФаксимилеРуководителя", "ФаксимилеПустая"));
				ПодписиИФаксимиле.Вставить("ПодписьРуководителя", ?(ДанныеОбъекта.ЭтоФизическоеЛицо, "ФаксимилеПустая", "ФаксимилеРуководителя"));
				ПодписиИФаксимиле.Вставить("ПодписьГлавногоБухгалтера", ?(ДанныеОбъекта.ЭтоФизическоеЛицо, "ФаксимилеПустая", "ФаксимилеГлавногоБухгалтера"));
				
				ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластиМакета.ОбластьПодвал, ДанныеОбъекта, ПодписиИФаксимиле, Ошибки);
				
			КонецЕсли;
			
			ОбластиМакета.ОбластьПодвал.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьПодвал);
			
		КонецЕсли;
		
		Если ЭтоУПД Тогда
			
			Если ОбластиМакета.ОбластьПодвалНакладной <> Неопределено Тогда 
								
				ДанныеОТранспортировке = "";
				Если ЗначениеЗаполнено(ДанныеОбъекта.Вес) Тогда
					
					ДанныеОТранспортировке = НСтр("ru = 'масса брутто: '") + ИнформацияОГрузеПрописью(ДанныеОбъекта.Вес, Истина);
					
				КонецЕсли;
				
				Если ЗначениеЗаполнено(ДанныеОбъекта.Объем) Тогда
					
					ДанныеОТранспортировке = ДанныеОТранспортировке 
						+ ?(ПустаяСтрока(ДанныеОТранспортировке), "", ", ") + НСтр("ru = 'объем: '") + ИнформацияОГрузеПрописью(ДанныеОбъекта.Объем, Ложь);
					
				КонецЕсли;
				ДанныеПечати.Вставить("ДанныеОТранспортировке", ДанныеОТранспортировке);
				
				ОснованиеПечати = "";
				Если НЕ ПустаяСтрока(ДанныеОбъекта.ПредставлениеОснования) Тогда
					
					ОснованиеПечати = ДанныеОбъекта.ПредставлениеОснования;
					
				Иначе
					
					// Для корректировок отдельное правило.
					Если ЕстьКолонкаЭтоКорректировка
						И ДанныеОбъекта.ЭтоКорректировка
						И ЗначениеЗаполнено(ДанныеОбъекта.ДокументОснование) Тогда
						
						ИсходныйДокумент = ПечатьДокументовУНФ.ПолучитьИсходныйДокументКорректировки(ДанныеОбъекта.ДокументОснование);
						ОснованиеПечати = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИсходныйДокумент, "ОснованиеПечати").ОснованиеПечати;
						
					КонецЕсли;
					
				КонецЕсли;
				ДанныеПечати.Вставить("ОснованиеПечати", ОснованиеПечати);
				ДанныеПечати.Вставить("ДоверенностьНомер", ДанныеОбъекта.ДоверенностьНомер);
				ДанныеПечати.Вставить("ДоверенностьВыдана", ДанныеОбъекта.ДоверенностьВыдана);
				ДанныеПечати.Вставить("ДоверенностьДата", ДанныеОбъекта.ДоверенностьДата);
				ДанныеПечати.Вставить("ДоверенностьЛицо", ДанныеОбъекта.ДоверенностьЛицо);
				ДанныеПечати.Вставить("Основание", СформироватьПредставлениеОснования(ДанныеПечати));
				ДанныеПечати.Вставить("ДатаОтгрузкиПередачи", Формат(ДанныеОбъекта.ДатаДокумента, "ДФ='« дд » ММММ гггг ""года""'"));
				ДанныеПечати.Вставить("ПредставлениеОрганизации", УниверсальноеПредставлениеСубъекта(СведенияОПоставщике, ИННПоставщика));
				ДанныеПечати.Вставить("ПредставлениеКонтрагента", УниверсальноеПредставлениеСубъекта(СведенияОПокупателе, ИННПокупателя));
				ДанныеПечати.Вставить("ДолжностьКладовщика", ДанныеОбъекта.ДолжностьКладовщика);
				ДанныеПечати.Вставить("ФИОКладовщика", ДанныеОбъекта.РасшифровкаПодписиКладовщика);
				ДанныеПечати.Вставить("ДолжностьРуководителя", ДанныеОбъекта.ДолжностьРуководителя);
				ДанныеПечати.Вставить("ФИОРуководителя", ДанныеОбъекта.РасшифровкаПодписиРуководителя);
				ДанныеПечати.Вставить("РасшифровкаПодписиКонтрагента", ДанныеОбъекта.РасшифровкаПодписиКонтрагента);
				
				Если ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да Тогда
					
					ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя каринки в области, Значение - имя реквизита
					ПодписиИФаксимиле.Вставить("ПодписьОтветственногоЗаОформление", "ФаксимилеРуководителя");
					ПодписиИФаксимиле.Вставить("ПодписьКладовщика", "ФаксимилеКладовщика");
					ПодписиИФаксимиле.Вставить("ПечатьОрганизации", "ФаксимилеПечати");
					
					ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластиМакета.ОбластьПодвалНакладной, ДанныеОбъекта, ПодписиИФаксимиле, Ошибки);
					
				КонецЕсли;
				
				ОбластиМакета.ОбластьПодвалНакладной.Параметры.Заполнить(ДанныеПечати);
				
				//++ Ушаков М.А
				Попытка
					Если Не ДанныеОбъекта.Ссылка.Метаданные().Реквизиты.Найти("ЗаказПокупателя") = Неопределено Тогда
						ЗаказПокупателя = ДанныеОбъекта.Ссылка.ЗаказПокупателя;
					ИначеЕсли Не ДанныеОбъекта.Ссылка.Метаданные().Реквизиты.Найти("Заказ") = Неопределено Тогда
						ЗаказПокупателя = ДанныеОбъекта.Ссылка.Заказ;
					КонецЕсли;
					
					Если ЗначениеЗаполнено(ЗаказПокупателя) И ТипЗнч(ЗаказПокупателя) = Тип("ДокументСсылка.ЗаказПокупателя") Тогда
						ОбластиМакета.ОбластьПодвалНакладной.Параметры.основание = "Заказ покупателя №" 
							+ ЗаказПокупателя.Номер
							+ " от " +  Формат(ЗаказПокупателя.Дата, "ДЛФ=ДД");
					КонецЕсли;

				Исключение
				КонецПопытки;
				//--
				
				ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьПодвалНакладной);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции
