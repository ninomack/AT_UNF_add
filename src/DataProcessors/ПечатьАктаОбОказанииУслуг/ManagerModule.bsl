
&Вместо("СформироватьПФ")
Функция Aktorg_СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ОбъектыПечати, Подробно)
	Перем Ошибки, ПервыйДокумент, НомерСтрокиНачало;
	
	Макет				= УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент	= ОписаниеПечатнойФормы.ТабличныйДокумент;
	ДанныеПечати		= Новый Структура;
	ЕстьТЧРаботыУслуги	= (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаРаботыУслуги") <> Неопределено);
	ПредставлениеСкидки = Константы.ПредставлениеСкидкиВПечатнойФорме.Получить();
	
	Для каждого ДанныеОбъекта Из ДанныеОбъектовПечати Цикл
		
		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало, ДанныеПечати);
		
		СведенияОбОрганизации = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Организация, ДанныеОбъекта.ДатаДокумента, ,);
		СведенияОбКонтрагенте = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Контрагент, ДанныеОбъекта.ДатаДокумента, ,);
		
		ЛоготипЗаполнен = ЗначениеЗаполнено(ДанныеОбъекта.ФайлЛоготип);
		ИмяМакета = ?(ЛоготипЗаполнен, "ЗаголовокСЛоготипом", "Заголовок");
		
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяМакета, "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ШаблонЗаголовка = Нстр("ru ='Акт об оказании услуг № %1 от %2'");
			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ДанныеОбъекта.ДатаДокумента, ДанныеОбъекта.Номер, ДанныеОбъекта.Префикс);
			ДанныеПечати.Вставить("ПредставлениеДокумента", СтрШаблон(ШаблонЗаголовка, НомерДокумента, Формат(ДанныеОбъекта.ДатаДокумента, "ДЛФ=DD")));
			
			Если ЛоготипЗаполнен Тогда
				
				ДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ДанныеОбъекта.ФайлЛоготип);
				Если ЗначениеЗаполнено(ДанныеКартинки) Тогда
					
					ОбластьМакета.Рисунки.Логотип.Картинка = Новый Картинка(ДанныеКартинки);
					
				КонецЕсли;
				
			КонецЕсли;
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Поставщик", "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ДанныеПечати.Вставить("ПредставлениеПоставщика", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,ИНН,КПП,ЮридическийАдрес,Телефоны,"));
			ДанныеПечати.Вставить("ОснованиеПечати", ДанныеОбъекта.ОснованиеПечати);
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Покупатель", "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ДанныеПечати.Вставить("ПредставлениеПолучателя", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОбКонтрагенте, "ПолноеНаименование,ИНН,КПП,РегистрационныйНомер,ЮридическийАдрес,Телефоны,"));
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			
			//++Ушаков М.А.
			Если ЗначениеЗаполнено(ДанныеОбъекта.Ссылка.ЗаказПокупателя) Тогда
				ОбластьМакета.Параметры.ОснованиеПечати = "Заказ покупателя №" + ДанныеОбъекта.Ссылка.ЗаказПокупателя.Номер
					+ " от " + Формат(ДанныеОбъекта.Ссылка.ЗаказПокупателя.дата, "ДЛФ=ДД");
			КонецЕсли;
			//--
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		ЕстьСкидки = (ДанныеОбъекта.ТаблицаРаботыУслуги.Итог("ЕстьСкидка") <> 0);
		
		ИмяОбласти = ?(ЕстьСкидки, "ШапкаТаблицыСоСкидкой", "ШапкаТаблицы");
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		ИмяОбласти = ?(ЕстьСкидки, "СтрокаСоСкидкой", "Строка");
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			СтруктураИтогов = Новый Структура("Сумма, СуммаНДС, Всего, Количество, НомерСтроки, ПредставлениеСкидки, ЕстьСкидки, Подробно, ЕстьСтавкаНольПроцентов", 0, 0, 0, 0, 0, ПредставлениеСкидки, ЕстьСкидки, Подробно, Ложь);
			// Наборы
			СтруктураИтогов.Вставить("ЕстьНаборы", ДанныеОбъекта.ТаблицаРаботыУслуги.Колонки.Найти("НоменклатураНабора")<>Неопределено);
			Если СтруктураИтогов.ЕстьНаборы Тогда
				// Наборы неподходящего типа разворачиваем до составляющих
				РазвернутьНабор = Ложь;
				Для каждого СтрокаРаботыУслуги Из ДанныеОбъекта.ТаблицаРаботыУслуги Цикл
					Если СтрокаРаботыУслуги.ЭтоНабор 
						И СтрокаРаботыУслуги.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга 
						И СтрокаРаботыУслуги.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Работа Тогда
						РазвернутьНабор = Истина;
						Продолжить;
					КонецЕсли; 
					Если РазвернутьНабор 
						И НЕ ЗначениеЗаполнено(СтрокаРаботыУслуги.НоменклатураНабора) Тогда
						РазвернутьНабор = Ложь;
					КонецЕсли;
					Если РазвернутьНабор Тогда
						СтрокаРаботыУслуги.НоменклатураНабора = Неопределено;
						СтрокаРаботыУслуги.ХарактеристикаНабора = Неопределено;
						СтрокаРаботыУслуги.НеобходимоВыделитьКакСоставНабора = Ложь;
					КонецЕсли; 
				КонецЦикла; 
			КонецЕсли; 
			// Конец Наборы
			
			ПараметрыНоменклатуры = Новый Структура;
			
			Для каждого СтрокаРаботыУслуги Из ДанныеОбъекта.ТаблицаРаботыУслуги Цикл
				
				Если СтрокаРаботыУслуги.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга
					И СтрокаРаботыУслуги.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Работа Тогда
					
					Продолжить;
					
				КонецЕсли;
				
				ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаРаботыУслуги, ДанныеПечати, ПараметрыНоменклатуры, СтруктураИтогов);
				ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
				ТабличныйДокумент.Вывести(ОбластьМакета);
				
				// Наборы
				Если СтруктураИтогов.ЕстьНаборы Тогда
					НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластьМакета, СтрокаРаботыУслуги);
				КонецЕсли;
				// Конец Наборы
			
			КонецЦикла;
			
		КонецЕсли;
		
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Итого", "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ДанныеПечати.Вставить("Всего", УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.Сумма));
			ДанныеПечати.Вставить("ЗаголовокНДС", ПечатьДокументовУНФ.ПредставлениеЗаголовкаНДС(СтруктураИтогов.СуммаНДС, ДанныеОбъекта.СуммаВключаетНДС, Ложь, СтруктураИтогов.ЕстьСтавкаНольПроцентов));
			ДанныеПечати.Вставить("ВсегоНДС", ?(СтруктураИтогов.СуммаНДС = 0 И НЕ СтруктураИтогов.ЕстьСтавкаНольПроцентов, "-", УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.СуммаНДС, , "0,00")));
			
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "СуммаПрописью", "", Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ШаблонИтоговойСтроки = НСтр("ru ='Всего наименований %1, на сумму %2'");
			ДанныеПечати.Вставить("ИтоговаяСтрока", СтрШаблон(ШаблонИтоговойСтроки, Строка(СтруктураИтогов.Количество), УправлениеНебольшойФирмойСервер.ФорматСумм(СтруктураИтогов.Всего, ДанныеОбъекта.ВалютаДокумента)));
			ДанныеПечати.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(СтруктураИтогов.Всего, ДанныеОбъекта.ВалютаДокумента));
			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		ИмяОбласти = ?(ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да, "ПодписиСФаксимиле", "ПодписиБезФаксимиле");
		ОбластьМакета = ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, ИмяОбласти, , Ошибки);
		Если ОбластьМакета <> Неопределено Тогда
			
			ОбластьМакета.Параметры.Заполнить(ДанныеОбъекта);
			
			Если ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да Тогда
				
				ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя каринки в области, Значение - имя реквизита
				ПодписиИФаксимиле.Вставить("ПодписьРуководителя", "ФаксимилеРуководителя");
				ПодписиИФаксимиле.Вставить("ПечатьОрганизации", "ФаксимилеПечати");
				
				ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластьМакета, ДанныеОбъекта, ПодписиИФаксимиле, Ошибки);
				
			КонецЕсли;
			
			ТабличныйДокумент.Вывести(ОбластьМакета);
			
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ДанныеОбъекта.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
КонецФункции
