//акторг  добавил
&НаКлиенте
Процедура ЗаполнитьЗаявкиИРаботы(Команда)
	 ВызватьПроцедуруЗаполненияТабличнойЧасти = Истина;
	
	//Если НЕ ЗначениеЗаполнено(Объект.КонецПериода) Тогда
	//	
	//	ТекстСообщения	= НСтр("ru = 'Неверно заполнена дата окончания периода.'");
	//	ПолеСообщения	= "Объект.КонецПериода";
	//	
	//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ПолеСообщения);
	//	
	//	ВызватьПроцедуруЗаполненияТабличнойЧасти = Ложь;
	//	
	//КонецЕсли;
	
	
	Если ВызватьПроцедуруЗаполненияТабличнойЧасти Тогда
		
		//Если Объект.ДанныеОрганизации.Количество() > 0 Тогда
		//	
		//	ТестВопроса	= Нстр("ru = 'Табличная часть будет очищена и заполнена повторно. Продолжить?'");
		//	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработчикПослеВопросаООчистке", ЭтотОбъект, "ДанныеОрганизации");
		//	ПоказатьВопрос(ОписаниеОповещения, ТестВопроса, РежимДиалогаВопрос.ДаНет, 0);
		//	
		//Иначе
		//	
			ЗаполнитьПоОстаткам();
			
		//КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
// Процедура заполнения табличной части "Данные организации" по данным учета
//
Процедура ЗаполнитьПоОстаткам()
	СтруктураКонтрагента = Новый Структура("Контрагент,Договор,УчетРаботИЗаявок",Контрагент,Договор,Объект.УчетРаботИЗаявок);
	РассчитатьЗаявкиИРаботы(СтруктураКонтрагента);
	//УстановитьКартинкуСтраницыДанныеКонтрагента();
	
КонецПроцедуры // ЗаполнитьПоОстаткам()

&НаСервере
Процедура РассчитатьЗаявкиИРаботы(КонтрагентИДоговор)
	
	
	ТекОбъект = РеквизитФормыВЗначение("Объект");
	ТЗ = ТекОбъект.УчетРаботИЗаявок;
	ТЗ.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	АТ_УчетРаботРаботы.Ссылка КАК УчетРабот,
	                      |	АТ_УчетРаботРаботы.Ссылка.Контрагент КАК Контрагент,
	                      |	АТ_УчетРаботРаботы.Ссылка.Договор КАК Договор,
	                      |	АТ_УчетРаботРаботы.КоличествоПринятоеЗаказчиком КАК Количество,
	                      |	АТ_УчетРаботРаботы.Сумма КАК Сумма,
	                      |	АТ_УчетРаботРаботы.Гарантия КАК Гарантия,
	                      |	АТ_УчетРаботРаботы.Описание КАК Описание,
	                      |	АТ_УчетРаботРаботы.Результат КАК Результат,
	                      |	АТ_УчетРаботРаботы.Начало КАК Начало,
	                      |	АТ_УчетРаботРаботы.Окончание КАК Окончание
	                      |ИЗ
	                      |	Документ.АТ_УчетРабот.Работы КАК АТ_УчетРаботРаботы
	                      |ГДЕ
	                      |	АТ_УчетРаботРаботы.Ссылка.Контрагент = &Контрагент
	                      |	И АТ_УчетРаботРаботы.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата1, ДЕНЬ) И КОНЕЦПЕРИОДА(&дата2, ДЕНЬ)
	                      |	И АТ_УчетРаботРаботы.Ссылка.Проведен = ИСТИНА");
	
	Запрос.УстановитьПараметр("Контрагент",КонтрагентИДоговор.Контрагент);
	Запрос.УстановитьПараметр("Дата1",Объект.РасчетныйПериодНачало);
	Запрос.УстановитьПараметр("Дата2",Объект.РасчетныйПериодОкончание);

	//Запрос.УстановитьПараметр("Договор",КонтрагентИДоговор.Договор);
	Рез= Запрос.Выполнить().Выгрузить();
	Для Каждого Стр Из Рез Цикл
		НовСтр = ТЗ.Добавить();
		НовСтр.Договор = Стр.Договор;
//		НовСтр.Заявка = Стр.Заявка;
		НовСтр.УчетРабот = Стр.УчетРабот;
		Содержание = "";
		//Если Не стр.Заявка = ДОкументы.АТ_ЗаявкаНаРаботы.ПустаяСсылка() Тогда
		//	Для Каждого СтрЗаявки Из Стр.Заявка.ПричиныОбращения Цикл
		//		Содержание = Содержание + СтрЗаявки.Содержание + "; ";
		//	КонецЦикла;
		//	Содержание = Содержание + " (выполнена " + Формат(Стр.Заявка.ФактическаяДатаГотовности,"ДЛФ=Д") +  ") ";
		//Иначе
		//	Для Каждого СтрРаботы Из Стр.УчетВремени.Работы Цикл
				Если Стр.Гарантия Тогда
					Содержание = Содержание + "ГАРАНТИЯ: ";
				КонецЕсли;	
				Содержание = Содержание + Стр.Описание +
							" (заключение: "+ Стр.Результат + ")" +
							" решил: " + ПолучитьФамилию(Стр.УчетРабот.Исполнитель) +
							" с " + Лев(Формат(Стр.Начало,"ДЛФ=В"),5) + " по "+ Лев(Формат(Стр.Окончание,"ДЛФ=В"),5) + "; ";
			//КонецЦикла;
		//КонецЕсли;	
		НовСтр.Содержание = Содержание;
		НовСтр.Сумма = Стр.Сумма;
		НовСтр.Количество = Стр.Количество;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ТекОбъект,"Объект");
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьФамилию(СведенияОФизЛице)
	 ФИО = РегистрыСведений.ФИОФизЛиц.ФИОФизЛица(ТекущаяДата(), СведенияОФизЛице);
	 ФИОФизЛица = ФИО;
	Попытка
		Возврат			ФИОФизЛица.Фамилия;
	Исключение
		Возврат СведенияОФизЛице;
	КонецПопытки;	
КонецФункции  //акторг

&Вместо("ДокументОснованиеНадписьОбработкаНавигационнойСсылки")
&НаКлиенте
Процедура АТ_ДокументОснованиеНадписьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если НавигационнаяСсылкаФорматированнойСтроки = "удалить" Тогда
		Объект.ДокументОснование = Неопределено;
		Элементы.ДокументОснованиеНадпись.Заголовок = РаботаСФормойДокументаКлиентСервер.СформироватьНадписьДокументОснование(Неопределено);
		Модифицированность = Истина;
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "заполнить" Тогда
		ЗаполнитьПоОснованиюНачало();
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "выбрать" Тогда
		
		//Выбрать основание
		//СтруктураПараметровОтбора = Новый Структура;
		//_ОповещениеОЗакрытии = Новый ОписаниеОповещения("ВыбратьОснованиеЗавершение", ЭтотОбъект);
		//ОткрытьФорму("Документ.СчетНаОплату.ФормаВыбора", СтруктураПараметровОтбора, ЭтотОбъект, ,,,_ОповещениеОЗакрытии);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыборТипаОснованияЗавершение", ЭтотОбъект);
		ПоказатьВыборИзМеню(ОписаниеОповещения, СписокДокументОснование, Элементы.ДокументОснованиеНадпись);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "открыть" Тогда
		
		Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) тогда
			возврат;
		КонецЕсли;
		
		РаботаСФормойДокументаКлиент.ОткрытьФормуДокументаПоТипу(Объект.ДокументОснование);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокументОснование()
	
	СписокДокументОснование = Новый СписокЗначений;
	
	СписокДокументОснование.Добавить("Документ.АТ_УчетРабот.ФормаВыбора", "Учет работ");
	СписокДокументОснование.Добавить("Документ.СчетНаОплату.ФормаВыбора", "Счет на оплату");
КонецПроцедуры

&НаКлиенте
Процедура ВыборТипаОснованияЗавершение(ВыбИмяФормы, Параметры) Экспорт
	
	Если ВыбИмяФормы<>Неопределено Тогда
		
		СтруктураПараметровОтбора = Новый Структура();
		_ОповещениеОЗакрытии = Новый ОписаниеОповещения("АТ_ВыбратьОснованиеЗавершение", ЭтотОбъект);
		ОткрытьФорму(ВыбИмяФормы.Значение, СтруктураПараметровОтбора, ЭтотОбъект, ,,,_ОповещениеОЗакрытии);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура АТ_ВыбратьОснованиеЗавершение(ВыбЗначение, Параметры) Экспорт

	Если ВыбЗначение<>Неопределено Тогда
		Объект.ДокументОснование = ВыбЗначение;
		Элементы.ДокументОснованиеНадпись.Заголовок = РаботаСФормойДокументаКлиентСервер.СформироватьНадписьДокументОснование(ВыбЗначение);
		Модифицированность = Истина;
		
	КонецЕсли;

КонецПроцедуры

&После("ПриСозданииНаСервере")
&НаСервере
Процедура АТ_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	ЗаполнитьСписокДокументОснование();	
КонецПроцедуры